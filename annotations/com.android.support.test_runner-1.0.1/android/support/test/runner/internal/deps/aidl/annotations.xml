<root>
    <item
        name='android.support.test.runner.internal.deps.aidl.Codecs void writeStrongBinder(android.os.Parcel, android.os.IInterface) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='android.support.test.runner.internal.deps.aidl.Codecs boolean createBoolean(android.os.Parcel) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='android.support.test.runner.internal.deps.aidl.Codecs java.util.ArrayList createList(android.os.Parcel) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='android.support.test.runner.internal.deps.aidl.Codecs java.util.HashMap createMap(android.os.Parcel) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='android.support.test.runner.internal.deps.aidl.BaseProxy android.os.Parcel obtainAndWriteInterfaceToken()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='android.support.test.runner.internal.deps.aidl.Codecs void readList(android.os.Parcel, java.util.List&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='android.support.test.runner.internal.deps.aidl.Codecs void writeCharSequenceAsReturnValue(android.os.Parcel, java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='android.support.test.runner.internal.deps.aidl.Codecs T createParcelable(android.os.Parcel, android.os.Parcelable.Creator&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='android.support.test.runner.internal.deps.aidl.BaseProxy android.os.Parcel transactAndReadException(int, android.os.Parcel) 1'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='android.support.test.runner.internal.deps.aidl.Codecs void writeParcelableAsReturnValue(android.os.Parcel, android.os.Parcelable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='android.support.test.runner.internal.deps.aidl.BaseStub android.os.IBinder asBinder()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='android.support.test.runner.internal.deps.aidl.BaseProxy android.os.Parcel transactAndReadException(int, android.os.Parcel)'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='android.support.test.runner.internal.deps.aidl.Codecs void readMap(android.os.Parcel, java.util.Map&lt;?,?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='android.support.test.runner.internal.deps.aidl.Codecs void writeCharSequence(android.os.Parcel, java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='android.support.test.runner.internal.deps.aidl.Codecs void writeParcelable(android.os.Parcel, android.os.Parcelable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='android.support.test.runner.internal.deps.aidl.BaseProxy void transactAndReadExceptionReturnVoid(int, android.os.Parcel) 1'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='android.support.test.runner.internal.deps.aidl.Codecs java.lang.CharSequence createCharSequence(android.os.Parcel) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='android.support.test.runner.internal.deps.aidl.BaseProxy void transactOneway(int, android.os.Parcel) 1'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='android.support.test.runner.internal.deps.aidl.Codecs void writeBoolean(android.os.Parcel, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
</root>
