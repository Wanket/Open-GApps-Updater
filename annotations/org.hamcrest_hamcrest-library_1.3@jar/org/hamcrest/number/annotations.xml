<root>
    <item
        name='org.hamcrest.number.IsCloseTo void describeMismatchSafely(java.lang.Double, org.hamcrest.Description) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='org.hamcrest.number.OrderingComparison org.hamcrest.Matcher&lt;T&gt; greaterThanOrEqualTo(T)'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='org.hamcrest.number.OrderingComparison org.hamcrest.Matcher&lt;T&gt; lessThanOrEqualTo(T)'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='org.hamcrest.number.OrderingComparison boolean matchesSafely(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='org.hamcrest.number.BigDecimalCloseTo void describeMismatchSafely(java.lang.Object, org.hamcrest.Description) 1'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='org.hamcrest.number.BigDecimalCloseTo void describeMismatchSafely(java.math.BigDecimal, org.hamcrest.Description) 1'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='org.hamcrest.number.IsCloseTo boolean matchesSafely(java.lang.Double) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='org.hamcrest.number.OrderingComparison void describeMismatchSafely(java.lang.Object, org.hamcrest.Description) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='org.hamcrest.number.IsCloseTo void describeMismatchSafely(java.lang.Object, org.hamcrest.Description) 1'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='org.hamcrest.number.OrderingComparison void describeMismatchSafely(T, org.hamcrest.Description) 1'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='org.hamcrest.number.OrderingComparison org.hamcrest.Matcher&lt;T&gt; greaterThan(T)'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='org.hamcrest.number.BigDecimalCloseTo void describeTo(org.hamcrest.Description) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='org.hamcrest.number.OrderingComparison boolean matchesSafely(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='org.hamcrest.number.IsCloseTo org.hamcrest.Matcher&lt;java.lang.Double&gt; closeTo(double, double)'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='org.hamcrest.number.IsCloseTo void describeMismatchSafely(java.lang.Double, org.hamcrest.Description) 1'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='org.hamcrest.number.IsCloseTo void describeTo(org.hamcrest.Description) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='org.hamcrest.number.BigDecimalCloseTo org.hamcrest.Matcher&lt;java.math.BigDecimal&gt; closeTo(java.math.BigDecimal, java.math.BigDecimal)'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='org.hamcrest.number.OrderingComparison org.hamcrest.Matcher&lt;T&gt; lessThan(T)'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='org.hamcrest.number.BigDecimalCloseTo void describeMismatchSafely(java.lang.Object, org.hamcrest.Description) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='org.hamcrest.number.BigDecimalCloseTo void describeMismatchSafely(java.math.BigDecimal, org.hamcrest.Description) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='org.hamcrest.number.IsCloseTo void describeMismatchSafely(java.lang.Object, org.hamcrest.Description) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='org.hamcrest.number.IsCloseTo boolean matchesSafely(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='org.hamcrest.number.OrderingComparison org.hamcrest.Matcher&lt;T&gt; comparesEqualTo(T)'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='org.hamcrest.number.OrderingComparison void describeMismatchSafely(java.lang.Object, org.hamcrest.Description) 1'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='org.hamcrest.number.OrderingComparison void describeMismatchSafely(T, org.hamcrest.Description) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='org.hamcrest.number.BigDecimalCloseTo boolean matchesSafely(java.math.BigDecimal) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='org.hamcrest.number.OrderingComparison void describeTo(org.hamcrest.Description) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='org.hamcrest.number.BigDecimalCloseTo boolean matchesSafely(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
</root>
