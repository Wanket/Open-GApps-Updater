<root>
    <item name='kotlin.ranges.CharRange kotlin.ranges.CharRange access$getEMPTY$cp()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.LongProgression java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.CharRange java.lang.Comparable getStart()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.LongRange.Companion kotlin.ranges.LongRange getEMPTY()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.LongRange java.lang.Long getEndInclusive()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.IntProgression kotlin.collections.IntIterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.IntProgression java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.IntRange boolean contains(java.lang.Comparable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='kotlin.ranges.ClosedRange.DefaultImpls boolean isEmpty(kotlin.ranges.ClosedRange&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.CharRange java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.CharRange Companion'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.IntRange Companion'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='kotlin.ranges.CharProgression.Companion kotlin.ranges.CharProgression fromClosedRange(char, char, int)'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.LongRange Companion'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.IntRange java.lang.Integer getStart()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.CharProgression java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.IntRange java.lang.Integer getEndInclusive()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.LongRange java.lang.Comparable getEndInclusive()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.IntProgression Companion'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.IntProgression java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.IntRange kotlin.ranges.IntRange access$getEMPTY$cp()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.ClosedRange boolean contains(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.CharProgression java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='kotlin.ranges.ClosedFloatingPointRange.DefaultImpls boolean contains(kotlin.ranges.ClosedFloatingPointRange&lt;T&gt;, T) 1'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.ClosedFloatingPointRange boolean contains(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.ClosedFloatingPointRange boolean lessThanOrEquals(T, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='kotlin.ranges.ClosedRange.DefaultImpls boolean contains(kotlin.ranges.ClosedRange&lt;T&gt;, T) 1'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.IntRange.Companion kotlin.ranges.IntRange getEMPTY()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.LongRange kotlin.ranges.LongRange access$getEMPTY$cp()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.LongRange boolean contains(java.lang.Comparable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.LongRange java.lang.Comparable getStart()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.CharProgression Companion'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.IntRange java.lang.Comparable getStart()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.CharRange java.lang.Comparable getEndInclusive()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.ClosedFloatingPointRange boolean lessThanOrEquals(T, T) 1'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='kotlin.ranges.ClosedFloatingPointRange.DefaultImpls boolean isEmpty(kotlin.ranges.ClosedFloatingPointRange&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.CharRange java.lang.Character getEndInclusive()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.LongRange java.lang.Long getStart()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.IntRange java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.ClosedRange T getEndInclusive()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='kotlin.ranges.ClosedFloatingPointRange.DefaultImpls boolean contains(kotlin.ranges.ClosedFloatingPointRange&lt;T&gt;, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='kotlin.ranges.ClosedRange.DefaultImpls boolean contains(kotlin.ranges.ClosedRange&lt;T&gt;, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.LongRange java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='kotlin.ranges.IntProgression.Companion kotlin.ranges.IntProgression fromClosedRange(int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.LongProgression Companion'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.CharRange.Companion kotlin.ranges.CharRange getEMPTY()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.LongProgression java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.CharRange java.lang.Character getStart()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.ClosedRange T getStart()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.CharRange boolean contains(java.lang.Comparable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.LongProgression kotlin.collections.LongIterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.IntRange java.lang.Comparable getEndInclusive()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='kotlin.ranges.LongProgression.Companion kotlin.ranges.LongProgression fromClosedRange(long, long, long)'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.ranges.CharProgression kotlin.collections.CharIterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
</root>
