<root>
    <item
        name='kotlin.properties.ReadOnlyProperty T getValue(R, kotlin.reflect.KProperty&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='kotlin.properties.Delegates kotlin.properties.ReadWriteProperty&lt;java.lang.Object,T&gt; observable(T, kotlin.jvm.functions.Function3&lt;? super kotlin.reflect.KProperty&lt;?&gt;,? super T,? super T,kotlin.Unit&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='kotlin.properties.ObservableProperty void setValue(java.lang.Object, kotlin.reflect.KProperty&lt;?&gt;, T) 1'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='kotlin.properties.ObservableProperty void setValue(java.lang.Object, kotlin.reflect.KProperty&lt;?&gt;, T) 2'>
        <annotation name='org.jetbrains.annotations.NotNull' />
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}" />
        </annotation>
    </item>
    <item
        name='kotlin.properties.ReadWriteProperty void setValue(R, kotlin.reflect.KProperty&lt;?&gt;, T) 1'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='kotlin.properties.ObservableProperty T getValue(java.lang.Object, kotlin.reflect.KProperty&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='kotlin.properties.ReadWriteProperty void setValue(R, kotlin.reflect.KProperty&lt;?&gt;, T) 2'>
        <annotation name='org.jetbrains.annotations.NotNull' />
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}" />
        </annotation>
    </item>
    <item
        name='kotlin.properties.Delegates kotlin.properties.ReadWriteProperty&lt;java.lang.Object,T&gt; observable(T, kotlin.jvm.functions.Function3&lt;? super kotlin.reflect.KProperty&lt;?&gt;,? super T,? super T,kotlin.Unit&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item name='kotlin.properties.Delegates INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='kotlin.properties.ReadWriteProperty T getValue(R, kotlin.reflect.KProperty&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull' />
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value"
                val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}" />
        </annotation>
    </item>
    <item
        name='kotlin.properties.Delegates kotlin.properties.ReadWriteProperty&lt;java.lang.Object,T&gt; notNull()'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='kotlin.properties.Delegates kotlin.properties.ReadWriteProperty&lt;java.lang.Object,T&gt; vetoable(T, kotlin.jvm.functions.Function3&lt;? super kotlin.reflect.KProperty&lt;?&gt;,? super T,? super T,java.lang.Boolean&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='kotlin.properties.ReadWriteProperty T getValue(R, kotlin.reflect.KProperty&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='kotlin.properties.Delegates.observable.1 void afterChange(kotlin.reflect.KProperty&lt;?&gt;, T, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='kotlin.properties.Delegates kotlin.properties.ReadWriteProperty&lt;java.lang.Object,T&gt; vetoable(T, kotlin.jvm.functions.Function3&lt;? super kotlin.reflect.KProperty&lt;?&gt;,? super T,? super T,java.lang.Boolean&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='kotlin.properties.ObservableProperty boolean beforeChange(kotlin.reflect.KProperty&lt;?&gt;, T, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='kotlin.properties.ObservableProperty void afterChange(kotlin.reflect.KProperty&lt;?&gt;, T, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
    <item
        name='kotlin.properties.Delegates.vetoable.1 boolean beforeChange(kotlin.reflect.KProperty&lt;?&gt;, T, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull' />
    </item>
</root>
